class CCards_SpookySkeleton : Revenant
{
    Default
    {
	MeleeSound "";
	PainSound "corruptioncards/aaaaaa";
	Health 5000;
	Speed 20;
	PainChance 30;
	+DONTHARMCLASS;
	+DONTHARMSPECIES;
	+NOINFIGHTING;
    +FOILINVUL;
    +PIERCEARMOR;
    +DONTSQUASH;
	+THRUSPECIES;
	//+LOOKALLAROUND;
    +NOBLOCKMONST;
    +DONTMORPH;
    +NOICEDEATH;
    -COUNTKILL;
    maxstepheight 48;
	Obituary "%o could not calm an Agitated Revenant.";
	Tag "Agitated Revenant";
	Species "Authors";
    }

	States
	{
	Spawn:
      TNT1 A 0 A_Jump(256, "TargetDead");
      goto SlowSeek;
    TargetDead:
	  TNT1 A 0 A_LookEx(0, 0, 0, 1000, 360, "See");
	  AGIT A 1 A_Wander;
	  TNT1 A 0; //A_LookEx(0, 0, 0, 360, "See");
	  AGIT B 1 A_Wander;
	  TNT1 A 0 A_LookEx(0, 0, 0, 1000, 360, "See");
	  AGIT C 1 A_Wander;
	  TNT1 A 0; //A_LookEx(0, 0, 0, 360, "See");;
	  AGIT D 1 A_Wander;
	  TNT1 A 0 A_LookEx(0, 0, 0, 1000, 360, "See");
	  AGIT E 1 A_Wander;
	  TNT1 A 0; //A_LookEx(0, 0, 0, 360, "See");
	  AGIT F 1 A_Wander;
	  TNT1 A 0 A_Jump(90, "Dance");
	  Loop;
    SlowSeek:
      AGIT A 0
      {
          //A_PlaySound("corruptioncards/aaastep", CHAN_VOICE, 0.2, 0, ATTN_NORM);
      }
      AGIT AAAAAAAAAABBBBBBBBBBBCCCCCCCCCCC 1
      {
          speed = 3;
          A_LookEx(0, 0, 0, 1000, 360, "See");
          A_Wander();
          SightCheck();
      }
      AGIT A 0
      {
          //A_PlaySound("corruptioncards/aaastep", CHAN_VOICE, 0.2, 0, ATTN_NORM);
      }
      AGIT DDDDDDDDDDEEEEEEEEEEEFFFFFFFFFFF 1
      {
          speed = 3;
          A_LookEx(0, 0, 0, 1000, 360, "See");
          A_Wander();
          SightCheck();
      }
      loop;
	Dance:
	  TNT1 A 0 A_PlaySound("corruptioncards/aaaaaa", CHAN_VOICE, 1, 0, ATTN_NORM);
	  AGIT MMMNNN 1 A_LookEx(0, 0, 0, 1000, 360, "See");
	  TNT1 A 0 A_Jump(15, "Spawn");
	  AGIT MMMNNN 1 A_LookEx(0, 0, 0, 1000, 360, "See");
	  TNT1 A 0 A_Jump(15, "Spawn");
	  Loop;
	See:
	  TNT1 A 0 
      {
      A_PlaySound("corruptioncards/aaaaaa", CHAN_VOICE, 1, 0, ATTN_NORM);
      speed = 20;
      }
	  AGIT ABCDEF 1 {SkelChase();}
	  AGIT ABCDEF 1 {SkelChase();}
	  Loop;
	Melee:
	  TNT1 A 0 
      {
        A_PlaySound("corruptioncards/aaaaaa", CHAN_VOICE, 1, 0, ATTN_NORM);
        leaptimer = 0;
      }
	  TNT1 A 0 A_PlaySound("skeleton/swing", CHAN_BODY);
	  TNT1 A 0 ThrustThing(angle*256/360, 4, 0, 0);
	  AGIT G 1 A_FaceTarget;
	  TNT1 A 0 ThrustThing(angle*256/360, 4, 0, 0);
	  AGIT H 1 A_FaceTarget;
	  TNT1 A 0 ThrustThing(angle*256/360, 4, 0, 0);
	  AGIT I 1 A_CustomMeleeAttack (1 * random(1, 5), "skeleton/melee", "", "Mysterious");
	  Goto See;
	Missile:
      TNT1 A 0 {bNOPAIN = true;}
	  TNT1 A 0 A_PlaySound("corruptioncards/aaaaaa", CHAN_VOICE, 1, 0, ATTN_NORM);
	  AGIT J 8 Bright A_FaceTarget;
	  TNT1 AAAAAAAAAA 0 A_SpawnProjectile("CCards_SpookyRevenantMissile", 52, 14, frandom(25,-25), CMF_OFFSETPITCH, frandom(10,-10));
	  TNT1 AAAAAAAAAA 0 A_SpawnProjectile("CCards_SpookyRevenantMissile", 52, -14, frandom(25,-25), CMF_OFFSETPITCH, frandom(10,-10));
	  AGIT J 2 Bright A_FaceTarget;
	  TNT1 A 0 A_PlaySound("corruptioncards/aaaaaa", CHAN_VOICE, 1, 0, ATTN_NORM);
      TNT1 A 0 {bNOPAIN = false;}
	  AGIT K 20;
	  Goto See;
	Pain:
      TNT1 A 0 {bNOPAIN = true;}
	  AGIT LLLLL 1 A_SetAngle(30 + angle);
	  TNT1 A 0 A_PlaySound("corruptioncards/aaaaaa", CHAN_VOICE, 1, 0, ATTN_NORM);
	  AGIT LLLLLLLLLLLLLLLLL 1 A_SetAngle(30 + angle);
	  Goto Missile;
	Death:
      TNT1 A 0
      {
        CCard_SpookyScarySkeleton c = CCard_SpookyScarySkeleton(CCards_Functions.FindCardByName("CCard_SpookyScarySkeleton"));
        if(c)
        {
            c.timer = 35*45;
        }
      }
	  TNT1 A 0 A_PlaySound("corruptioncards/aaaaaa", CHAN_VOICE, 1, 0, ATTN_NORM);
	  TNT1 A 0 A_SpawnItemEx ("CCards_Actor_SpawnFire", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	  AGIT MNMN 3 A_FadeTo (0, 0.02, 1);
	  Loop;
	Raise:
	  Stop;
    Teleportend:
        TNT1 A 1;
        TNT1 A 0
        {
            
            A_StopSound(CHAN_VOICE);
            bSHOOTABLE = true;
            bSOLID = true;
            target = null;
            lastheard = null;
            A_ClearTarget();
        }
    goto SlowSeek;
    Teleporting:
      TNT1 A 1
      {
          bSHOOTABLE = false;
          bSOLID = false;
          ThinkerIterator ti = ThinkerIterator.Create("CCards_Actor_TempSpawnSpot");
		  CCards_Actor_TempSpawnSpot t = CCards_Actor_TempSpawnSpot(ti.Next());
        
		    if(t)
            {
                
                SetStateLabel("Teleportend");
                SetOrigin(t.pos, false);
                return;
            }
      }
      loop;
	}

    int sighttimer;
    int leaptimer;

    void SkelChase()
    {
        SightCheck();

        A_Chase("Melee", null);

        if(CountInv("CCards_Actor_IsNinjaDodging") > 0 && random(0, 6) == 0 && CheckSight(target, SF_IGNOREVISIBILITY))
        {  
            A_StartSound("corruptioncards/leap", attenuation: 0.7);
			A_FaceTarget(0, 0, 0, 0, FAF_TOP, 12 * (!bNOGRAVITY));
			Vel3DFromAngle(Min(Max(0, Distance2D(target) / 10), 40), angle, pitch);
			vel = vel + (0, 0, (12 + (target.pos.z - pos.z)/22) * !(bNOGRAVITY));
            A_TakeInventory("CCards_Actor_IsNinjaDodging", 1);
            SetStateLabel("Missile");
        }
    }

    bool TargetTooHigh()
    {
        if(target)
        {
            if(Abs(target.pos.z) - Abs(pos.z) > 48)
            {
                return true;
            }

            if(Distance2D(target) > 300)
            {
                return true;
            }
        }

        return false;
    }

    void SightCheck()
    {
        if(!CheckSight(target, 0))
        {
            sighttimer++;
            //if((Level.Time%5) == 0)
            //{
                //leaptimer--;
            //}
        }
        else
        {
            if(target)
            {
                leaptimer++;
                if(TargetTooHigh())
                {
                    leaptimer++;
                }
            }
            sighttimer = 0;
        }

        if(sighttimer == 35*15)
        {
            CCards_Actor_SafeSpawner a = CCards_Safespawner.New("CCards_Actor_TempSpawnSpot", 1, "", 40, 110, 0, 0);
            if(target && random(0, 2) != 0)
            {
                a.SetSpawnLocation(CCards_Functions.RandomPlayer());
            }
            a.minradius = 80;
            if(target)
            {
                //a.maxsteps = 2;
                Spawn("CCards_Boss_FakeSkeletonExit", pos);
            }
            //A_SpawnItemEx ("CCards_Actor_SpawnFire", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
            SetStateLabel("Teleporting");
            sighttimer = 0;
            leaptimer = 0;
            return;
        }

        if(leaptimer < 0)
        {
            leaptimer = 0;
        }

        if(leaptimer > 35*10)
        {
            if(target && random(0, 5) == 0)
            {
                bDROPOFF = true;
                A_StartSound("corruptioncards/leap", attenuation: 0.7);
				A_FaceTarget(0, 0, 0, 0, FAF_TOP, 12 * (!bNOGRAVITY));
				Vel3DFromAngle(Min(Max(0, Distance2D(target) / 10), 40), angle, pitch);
				vel = vel + (0, 0, (12 + (target.pos.z - pos.z)/22) * !(bNOGRAVITY));
				GiveInventory("CCards_Actor_IsNinjaDodging", 1);
                leaptimer = 0;
            }
        }
    }
}

Class CCards_Boss_FakeSkeletonExit : CCards_Actor_FX
{
    float vol;
    states
    {
        Spawn:
        TNT1 A 0
        {
            vol += 0.2;
            if(vol == 1.0)
            {
                Destroy();
                return;
            }
        }
        TNT1 A 10 A_PlaySound("corruptioncards/aaaaaa", CHAN_VOICE, 1.0 - vol, 0, ATTN_NORM);
        loop;
    }
}

class CCards_SpookyRevenantMissile : RevenantTracer
{
    Default
    {
	+ROCKETTRAIL;
	+MTHRUSPECIES;
	Speed 40;
	Decal "RevenantScorch";
	DamageType "Fire";
	PainType "Explosion";
	DeathType "Explosion";
    Damage 8;
    }

	States
	{
	Spawn:
        FATB AB 2 Bright A_SeekerMissile (1, 1,SMF_LOOK,128);
	    Loop;
	}
}
